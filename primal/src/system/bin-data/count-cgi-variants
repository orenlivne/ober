#!/bin/bash
#----------------------------------------------------------------
# Count number of variants in Jessica Chong's tabixed Hutterites
# CGI exome variant files.
#
# Author: Oren E. Livne
# Date:   14-FEB-2013
#----------------------------------------------------------------

#=======================================
# Read input parameters
#=======================================
DARGS=65
PROGNAME=`basename $0`
BATCH_HOME="${OBER}/code/impute/batch"

function read_input_args
{
    #%%%%%%%%%%%%%%%%%%%%%%%%
    # Default argument values
    #%%%%%%%%%%%%%%%%%%%%%%%%
    # Start chromosome index to process 
    start_chr=1
    # End chromosome index to process 
    stop_chr=22
    # Clean output dir first
    do_clean=false
    # Generate pipeline files
    do_create=false
    # Run pipeline
    do_run=false
    # Execute phasing stage
    do_phasing=false
	
    # Read input arguments
    while getopts "hps:e:" optionName; do
	case "$optionName" in
	    s) start_chr="$OPTARG";;
	    e) stop_chr="$OPTARG";;
	    h) print_usage; exit 0;;
	    [?]) print_type_for_help;;
       esac
    done

    # Get mandatory arguments
    shift $(( $OPTIND -1 ))
    if [[ $# -ne 1 ]]; then
  		echo "CGI file prefix must be specified."
	print_type_for_help
    fi
	prefix=$1
}

function print_usage
{
  	echo -e "Usage: ${PROGNAME} <file-prefix>"
  	echo -e ""
  	echo -e "Count number of variants in Jessica Chong's tabixed Hutterites"
  	echo -e "CGI variant files. Files are assumed to start with 'file-prefix'."
    echo -e ""
    echo -e "Optional flags:"
    echo -e "\t-s start-chr\tStart processing from this chromosome index. Default: ${start_chr}"
    echo -e "\t-e stop-chr\tStop processing at this chromosome index. Default: ${stop_chr}"
}

# Print help message and die
function print_type_for_help
{
    echo "Type \"${PROGNAME} -h\" for help."
    exit $E_BADARGS
}

#=======================================
# Main Program
#=======================================
# Parse CLI arguments
read_input_args "$@"

s1=0
s2=0
s3=0
s4=0
s=0
printf "%-8s %-8s %-8s %-8s %-8s %-8s\n" "Chr" "DEL" "INS" "SNP" "SUB" "TOTAL"
for i in `seq ${start_chr} 1 ${stop_chr}`; do
	file=$prefix$i.tsv.gz
	n=( `zcat ${file} | sed '1d' | awk {'print $5'} | sort | uniq -c` )
	n1="${n[0]}"
	n2="${n[2]}"
	n3="${n[4]}"
	n4="${n[6]}"
	n=$(($n1+$n2+$n3+$n4))
	s1=$(($s1+$n1))
	s2=$(($s2+$n2))
	s3=$(($s3+$n3))
	s4=$(($s1+$n4))
	s=$(($s+$n))
	printf "%-8d %-8d %-8d %-8d %-8d %-8d\n" $i $n1 $n2 $n3 $n4 $n
done
printf "%-8s %-8d %-8d %-8d %-8d %-8d\n" "Total" $s1 $s2 $s3 $s4 $s

# TODO: better counting using uniq -c ==> dictionary of all variant types ==> print dictionary + totals
# TODO: check that there are only bi-allelic variants using the following summary:
#
#zcat all.2012-09-20.testvar.chr1.tsv.gz | sed '1d' | awk '{ for (i = 9; i < NF; i++) { printf "%s\n", $i; }  }' | sort -n | uniq -c
